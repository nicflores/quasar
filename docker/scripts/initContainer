#!/usr/bin/env bash
set -euo pipefail # STRICT MODE
IFS=$'\n\t'       # http://redsymbol.net/articles/unofficial-bash-strict-mode/

function downloadMLRPM() {
  if [[ $1 =~ "marklogic" ]]
  then
    docker/Dockerfiles/Marklogic/getMLRpm
  fi
}

function upContainer() {
  docker-compose -f docker/docker-compose.yml up -d $1
}

CONTAINER=$1
if [[ $CONTAINER == "quasar_spark_local_test" ]]
then
  echo "$CONTAINER: not starting a container for spark_local_test..."
elif [[ $CONTAINER == "quasar_mimir" ]]
then
  echo "$CONTAINER: not starting a container for mimir..."
elif [[ $CONTAINER =~ "marklogic" ]]
then
  downloadMLRPM $CONTAINER
  upContainer $CONTAINER
  sleep 5
elif ([[ $CONTAINER == "quasar_spark_cassandra" ]] || [[ $CONTAINER == "quasar_spark_hdfs" ]] || [[ $CONTAINER == "quasar_spark_ftp" ]] || [[ $CONTAINER == "quasar_spark_elasticsearch" ]])
then
  upContainer quasar_spark_cluster
  docker/scripts/setupContainers -c quasar_spark_cluster
  upContainer $CONTAINER
  sleep 5
  CONNECTORIP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $CONTAINER)
  SPARKCLUSTERIP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' quasar_spark_cluster)
  echo "ping $CONTAINER with IP: $CONNECTORIP from spark cluster with IP: $SPARKCLUSTERIP"
  docker exec -it quasar_spark_cluster "ping -c 3 $CONNECTORIP"
  echo "ping spark cluster with IP: $SPARKCLUSTERIP from $CONTAINER with IP: $CONNECTORIP"
  docker exec -it $CONTAINER "ping -c 3 $SPARKCLUSTERIP"
  echo "done with ping test"
elif [[ $CONTAINER == "quasar_spark_s3" ]]
then
  upContainer quasar_spark_cluster
  sleep 5
else
  upContainer $CONTAINER
  sleep 5
fi
