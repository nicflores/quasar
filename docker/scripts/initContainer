#!/usr/bin/env bash
set -euo pipefail # STRICT MODE
IFS=$'\n\t'       # http://redsymbol.net/articles/unofficial-bash-strict-mode/

######################################
# Usage: initContainer <connector-name>
# This script can be used to call docker-compose for you.
# In some cases, before a container is created, we need to
# download artifacts that are usind in the creation of 
# various Quasar testing.


function downloadFile() {

  SPARK_VERSION="2.2.0"
  HADOOP_VERSION="2.7.3"
  SCALA_VERSION="2.11.11"

  if [[ $1 == "spark" ]]
  then
    URL="http://www-us.apache.org/dist/spark/spark-${SPARK_VERSION}/spark-${SPARK_VERSION}-bin-hadoop2.7.tgz"
  elif [[ $1 == "hadoop" ]]
  then
    URL="http://www-us.apache.org/dist/hadoop/common/hadoop-${HADOOP_VERSION}/hadoop-${HADOOP_VERSION}.tar.gz"
  elif [[ $1 == "scala" ]]
  then
    URL="https://downloads.lightbend.com/scala/${SCALA_VERSION}/scala-${SCALA_VERSION}.tgz"
  else
    echo "Please specify a downlaod url."
    exit 1
  fi

  FILE=$(echo ${URL##*/})

  if [[ ${TRAVIS:-} ]]
  then
    CACHE_DIR="$HOME/.cache/quasar/rpmDownloads"
    mkdir -p $CACHE_DIR
    CACHED_FILE="$CACHE_DIR/$FILE"
  else
    CACHE_DIR="/tmp"
    CACHED_FILE="$CACHE_DIR/$FILE"
  fi

  if [[ $URL =~ "/spark/" ]] || [[ $URL =~ "/scala/" ]]
  then
    TARGET_DIR="docker/Dockerfiles/Spark/"
    if [ -f $CACHED_FILE ]
    then
      echo "$FILE is cached"
      cp -n $CACHED_FILE $TARGET_DIR
    else
      echo "downloading $FILE"
      curl -o $CACHED_FILE $URL
      cp -n $CACHED_FILE $TARGET_DIR
    fi
  elif [[ $URL =~ "/hadoop/" ]]
  then
    TARGET_DIR="docker/Dockerfiles/Hadoop/"
    if [ -f $CACHED_FILE ]
    then
      cp -n $CACHED_FILE $TARGET_DIR
    else
      curl -o $CACHED_FILE $URL
      cp -n $CACHED_FILE $TARGET_DIR
    fi
  fi
}

function upContainer() {
  docker-compose -f docker/docker-compose.yml up -d $1
}

CONTAINER=$1
if [[ $CONTAINER == "quasar_spark_local_test" ]]
then
  echo "$CONTAINER: not starting a container for spark_local_test..."
elif [[ $CONTAINER == "quasar_mimir" ]]
then
  echo "$CONTAINER: not starting a container for mimir..."
elif [[ $CONTAINER =~ "marklogic" ]]
then
  # download Marklogic RPM and store it in travis cache
  docker/Dockerfiles/Marklogic/getMLRpm
  upContainer $CONTAINER
  sleep 5
elif ([[ $CONTAINER == "quasar_spark_cassandra" ]] || [[ $CONTAINER == "quasar_spark_hdfs" ]] || [[ $CONTAINER == "quasar_spark_ftp" ]] || [[ $CONTAINER == "quasar_spark_elasticsearch" ]])
then
  downloadFile "spark"
  downloadFile "hadoop"
  downloadFile "scala"
  upContainer quasar_spark_cluster # we always need spark when testing with spark related connectors
  upContainer $CONTAINER
  sleep 5
elif [[ $CONTAINER == "quasar_spark_s3" ]]
then
  downloadFile "spark"
  upContainer quasar_spark_cluster
  sleep 5
else
  upContainer $CONTAINER
  sleep 5
fi
